<?xml version="1.0"?>
<AlteryxDocument yxmdVer="2018.3">
  <Nodes>
    <Node ToolID="1">
      <GuiSettings Plugin="JupyterCode">
        <Position x="318" y="150" />
      </GuiSettings>
      <Properties>
        <Configuration>
          <Notebook><![CDATA[{"cells":[{"cell_type":"markdown","metadata":{},"source":"Run `Alteryx.help()` for info about useful functions.  \ni.e., `Alteryx.read(\"#1\")`, `Alteryx.write(df,1)`, `Alteryx.installPackages(\"eli5\")`"},{"cell_type":"code","execution_count":13,"metadata":{"trusted":true},"outputs":[],"source":"from ayx import Alteryx\n\nimport urllib\ndef import_URL(URL):\n    #This will read a raw (.py, .ypnb) file from URL,\n    #create a codeObject using compile\n    #execute it and keep variables in global scope\n    exec(compile(urllib.request.urlopen(URL).read(),'imported','exec'), globals())"},{"cell_type":"code","execution_count":5,"metadata":{"trusted":true},"outputs":[],"source":"raw = 'https://raw.githubusercontent.com/dsmdavid/Alteryx_Challenges_Python/master/testme2.py'\nurl = \"https://github.com/dsmdavid/Alteryx_Challenges_Python/blob/master/testme.py\"  "},{"cell_type":"code","execution_count":14,"metadata":{"trusted":true},"outputs":[],"source":"prior = [k for k in locals().keys()]"},{"cell_type":"code","execution_count":15,"metadata":{"trusted":true},"outputs":[{"name":"stdout","output_type":"stream","text":"4\n"}],"source":"import_URL(raw)"},{"cell_type":"code","execution_count":16,"metadata":{"trusted":true},"outputs":[],"source":"after =  [k for k in locals().keys()]"},{"cell_type":"code","execution_count":17,"metadata":{"trusted":true},"outputs":[],"source":"new =  [k for k in after if k not in prior]"},{"cell_type":"code","execution_count":21,"metadata":{"trusted":true},"outputs":[{"data":{"text/plain":"100"},"execution_count":21,"metadata":{},"output_type":"execute_result"}],"source":"globals()['b']"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"%run import_URL(\"https://github.com/dsmdavid/Alteryx_Challenges_Python/blob/master/testme.py\")\n    "},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"a = urllib.request.urlopen(raw)"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"raw"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"b"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"a.read()"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"b = urllib.request.urlopen(raw)"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"b"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"b.read()"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"exec(b.read()) in globals()"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"urllib.request.urlopen(raw).read()"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"a"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":"b"},{"cell_type":"code","execution_count":null,"metadata":{"trusted":true},"outputs":[],"source":""}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.0"}},"nbformat":4,"nbformat_minor":2}]]></Notebook>
          <assetGUID>553a624d2c7a49dab1e8b91c388f2aab</assetGUID>
          <Port>59506</Port>
          <GuidDir>7793fef8-8068-4b51-9359-89037b1f1830</GuidDir>
          <ToolId>1</ToolId>
        </Configuration>
        <Annotation DisplayMode="0">
          <Name />
          <DefaultAnnotationText />
          <Left value="False" />
        </Annotation>
      </Properties>
      <EngineSettings EngineDll="AlteryxJupyterPluginEngine.dll" EngineDllEntryPoint="AlteryxJupyter" />
    </Node>
  </Nodes>
  <Connections />
  <Properties>
    <Memory default="True" />
    <GlobalRecordLimit value="0" />
    <TempFiles default="True" />
    <Annotation on="True" includeToolName="False" />
    <ConvErrorLimit value="10" />
    <ConvErrorLimit_Stop value="False" />
    <CancelOnError value="False" />
    <DisableBrowse value="False" />
    <EnablePerformanceProfiling value="False" />
    <DisableAllOutput value="False" />
    <ShowAllMacroMessages value="False" />
    <ShowConnectionStatusIsOn value="True" />
    <ShowConnectionStatusOnlyWhenRunning value="True" />
    <ZoomLevel value="0" />
    <LayoutType>Horizontal</LayoutType>
    <MetaInfo>
      <NameIsFileName value="True" />
      <Name>New Workflow3</Name>
      <Description />
      <RootToolName />
      <ToolVersion />
      <ToolInDb value="False" />
      <CategoryName />
      <SearchTags />
      <Author />
      <Company />
      <Copyright />
      <DescriptionLink actual="" displayed="" />
      <Example>
        <Description />
        <File />
      </Example>
    </MetaInfo>
    <Events>
      <Enabled value="True" />
    </Events>
  </Properties>
</AlteryxDocument>